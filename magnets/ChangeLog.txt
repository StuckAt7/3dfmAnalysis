2005-06-16  Jeremy Cribb <jcribb@email.unc.edu>
	* forcecal2d.m: cleaned up code.  fixed bug in offset of 1D force-distance plot.

2005-06-16  Jeremy Cribb <jcribb@email.unc.edu>
	* forcecal2d.m: added documentation.
	
2005-06-16  Jeremy Cribb <jcribb@email.unc.edu>
	* fcd_forcecal2d.m: removed and renamed to forcecal2d.m
	* forcecal2d.m: added. added the MIP background, and separated the plots into different figures so that they might have different colormaps.

2005-06-09  Kalpit Desai <kvdesai@email.unc.edu>
	* visVelocities.m: 
	- Commented out the code that was removing the datapoints with absolutely zero velocities. For simulation purposes, we would like to see this data points through.

2005-01-10  Kalpit Desai <kvdesai@email.unc.edu>
	* visVelocities.m: 
	- Now has pole-locations plotted in the 'hairs' mode also.
	- Also cleaned up the background grid and tick-marks that weren't helping in visualization.

2004-12-06  Jeremy Cribb <jcribb@email.unc.edu>
	* video_forces.m:  statistics are now reported on multiple beads.
	* fcd_forcecal2d.m:  added.  prototype method for analyzing and calibrating forces in 2D.

2004-10-24  Jeremy Cribb <jcribb@email.unc.edu>
	* simforces.  added this folder to contain force simulation code.

2004-07-13  Kalpit Desai <kvdesai@cs.unc.edu>
	* visVelocities.m : Replaced the code for placing a colorbar with the new found matlab function 'colorbar'. Also changed the rendering in 'hairs' mode back to with white background sphere.
2004-06-11  Kalpit Desai <kvdesai@cs.unc.edu>
	* visVelocities.m : Changed the visualization for 'colors' mode. Instead of using faces as bins, now using vertices as bins. This is more efficient and also facilitates interpolation. Also included code that automaically plots color scale bar on right.

2004-06-10  Kalpit Desai <kvdesai@cs.unc.edu>
	* visVelocities.m : Changed the visualization for 'colors' mode. Making bins by tessellating the sphere by equilateral triangles, instead by forming latitues and longitudes. This tessellation makes area of all bins approximately equal, so provides uniformal sampling over surface of sphere. Tessellation is done by a tool - 'sphere_tri.m' - downloaded from internet from GNU-opensource. Requires the 'sphere_tri.m' file and all the files being called by this function (eg. 'sphere_project.m', 'mesh_refine_tri4.m' etc) in the matlab path.

2004-06-08  Kalpit Desai <kvdesai@cs.unc.edu>
	* visVelocities.m : modified to work for hexapole geometry also.

	* Initial Version
2004-05-18  Jeremy Cribb <jcribb@email.unc.edu>

	* Initial Version

