function drawlines(hax, x, colrx, stylex, tagx, y, colry, styley, tagy)% A utility to draw horizontal or vertical lines from specified points% usage : drawlines(gca, x, colrx, stylex, tagx, y, colry, styley, tagy)% x is the vector containing points on X axis from which vertical lines are% to be drawn% y is the vector containing points on Y axis from which horizontal lines% are to be drawn% style? and colr? can be specified to draw customized lines% tag? is a user-specified label to identify the line with. All horizontal% lines drawn with single function call will have the same label, same for% vertical lines.% x, y are defaulted to empty. style is defaulted to dash line '-.'% colrx is defaulted to 'r', colry is defaulted to 'k'%% Created 13 July 2005 by   Kalpit V. Desaiif nargin < 9 | isempty(tagy)  tagy = []; endif nargin < 8 | isempty(styley)  styley = '-.'; endif nargin < 7 | isempty(colry)  colry = 'k'; endif nargin < 6 | isempty(y)  y = []; endif nargin < 5 | isempty(tagx) tagx = []; endif nargin < 4 | isempty(stylex)  stylex = '-.'; endif nargin < 3 | isempty(colrx)  colrx = 'r'; end    axes(hax);lastxrange = get(hax,'xlim');lastyrange = get(hax,'ylim');axis auto;xrange = get(hax,'xlim');yrange = get(hax,'ylim');% first convert the arguments into horizontal matricesif ((~isempty(x)) & size(x,1) > size(x,2));    x = x';endif ((~isempty(y)) & size(y,1) > size(y,2));    y = y';endif(~isempty(x) & size(x,1) > 1)    disp('drawlines: Error:: This function accepts only vectors as inputs');    return;elseif(~isempty(y) & size(y,1) > 1)    disp('drawlines: Error:: This function accepts only vectors as inputs');    return;endif(~isempty(x))    if (isempty(tagx))        line(repmat(x,2,1), repmat(yrange',1,size(x,2)),'LineStyle',stylex, 'Color', colrx);    else        line(repmat(x,2,1), repmat(yrange',1,size(x,2)),'LineStyle',stylex, 'Color', colrx, 'tag', tagx);            endif(~isempty(y))    if (isempty(tagy))        line(repmat(xrange',1,size(y,2)),repmat(y,2,1),'LineStyle',styley, 'Color', colry);    else        line(repmat(xrange',1,size(y,2)),repmat(y,2,1),'LineStyle',styley, 'Color', colry, 'tag', tagy);    end       end
% Now set the viewpoint back to where it wasset(hax, 'Xlim',lastxrange);set(hax, 'Ylim',lastyrange);
